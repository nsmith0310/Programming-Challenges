from functools import lru_cache
class Solution:
    def numRollsToTarget(self, d: int, f: int, target: int) -> int:
        
        if d*f<target:return 0
        
        self.mod = 10**9 + 7
        @lru_cache(None)
        
        def r(i,s,c):
            if s==target and c==d:
                return 1
            elif s<target and c<d:
                t = 0
                for j in range(1,f+1):
                    if j+s<=target:
                        t+=r(j,s+j,c+1)
                
                return t
            else:
                return 0
            
        
        z = 0
        
        for i in range(1,f+1):
            z+=r(i,i,1)
            
        return z%self.mod