class Solution:
    def numOfSubarrays(self, arr: List[int]) -> int:
        
        K = 2
        
        lim = len(arr)
        
        A=[arr[0]%K]
        
        d = dict()
        d[arr[0]%K]=[0]
        
        for i in range(1,lim):
            A.append((A[i-1]%K+arr[i])%K)
            try:
                d[A[-1]].append(i)
            except:
                d[A[-1]]=[i]
        ###print(A,d)
        t = 0
        for i in range(0,lim):
            
            try:
                tmp = d[K+A[i]-arr[i]%K]
                mn = lim + 1
                tr = 0
                l = 0
                h = len(tmp)-1
                while l<=h:
                    m = (l+h)//2
                    if tmp[m]>=i:
                        if m<mn:
                            mn = m
                            tr = 1
                        h = m-1
                    else:
                        l = m+1
                if tr == 1:
                    ###print(i,len(tmp)-mn)
                    t+=len(tmp)-mn
                
                
            except:
                pass
            
            try:
                tmp = d[A[i]-arr[i]%K]
                mn = lim + 1
                tr = 0
                l = 0
                h = len(tmp)-1
                while l<=h:
                    m = (l+h)//2
                    if tmp[m]>=i:
                        if m<mn:
                            mn = m
                            tr = 1
                        h = m-1
                    else:
                        l = m+1
                if tr == 1:
                    ###print(i,len(tmp)-mn)
                    t+=len(tmp)-mn
            except:
                pass
        
        return ((lim*(lim+1)//2) - t)%(10**9 + 7)