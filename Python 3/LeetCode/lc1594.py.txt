from functools import lru_cache
class Solution:
    def maxProductPath(self, grid: List[List[int]]) -> int:
        
        self.mod = 10**9 + 7
        lim1 = len(grid)
        lim2 = len(grid[0])
        
        d = dict()
        
        for i in range(0,lim1):
            for j in range(0,lim2):
                d[(i,j)] = []
                if i<lim1-1:
                    d[(i,j)].append((i+1,j))
                if j<lim2-1:
                    d[(i,j)].append((i,j+1))
        
        self.mx = -1
        @lru_cache(None)
        def r(t,p):
            if t==(lim1-1,lim2-1):
                ###print(grid[lim1-1][lim2-1]*p)
                if p>self.mx:self.mx = p
                
            else:
                
                for x in d[t]:
                    r(x,(p*grid[x[0]][x[1]]))    
                
        r((0,0),grid[0][0])
        if self.mx<0:return -1
        return self.mx%self.mod