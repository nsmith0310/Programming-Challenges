from functools import lru_cache

class Solution:
    
    @lru_cache(None)
    def r(self,i,j):
        if i<=j:
            c =0 
            
            if self.s[i]==self.s[j]:
                if i<j:
                    return 2+self.r(i+1,j-1)
                elif i==j:
                    c+=1
            else:
                if i<j:
                    return max(self.r(i+1,j),self.r(i,j-1))
            
            
            return c
        else:
            return 0
    
    
    def minInsertions(self, s: str) -> int:
        lim = len(s)
        self.s=s
        return lim-self.r(0,lim-1)