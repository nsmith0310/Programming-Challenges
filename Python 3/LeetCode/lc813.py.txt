from functools import lru_cache
class Solution:
    def largestSumOfAverages(self, A: List[int], K: int) -> float:
        
        
        self.lim = len(A)
        @lru_cache(None)
        def r(i,k):
            if k<K:
                
                tmp = [0]
                c = 1
                s = 0
                for j in range(i,self.lim):
                    
                    s+=A[j]
                    tmp.append(s/c + r(j+1,k+1))
                    c+=1
                
                return max(tmp)
            else:
                val = sum(A[i:])
                lth = self.lim-i
                if lth>0:return val/lth
                return 0
                
            
        return r(0,1)
            