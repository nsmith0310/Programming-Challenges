class Solution:
    def minSubarray(self, nums: List[int], p: int) -> int:
        
        lim = len(nums)
        
        pref = [nums[0]]
        A = [nums[0]%p]
        
        d = dict()
        e = dict()
        d[A[0]]=[0]
        e[A[0]] = 1
        for i in range(1,lim):
            pref.append(pref[-1]+nums[i])
            A.append(pref[-1]%p)
            try:
                d[A[-1]].append(i)
                e[A[-1]]+=1
            except:
                d[A[-1]]=[i]
                e[A[-1]]=1
                
        t = pref[-1]    
        
        if t%p==0:return 0
        
        mn = 100001
        
        for i in range(0,lim):
            val = t%p + A[i]-nums[i]
            
            if val in d:
                
                l = 0
                h = e[val] - 1
                mn1 = 100001
                
                while l<=h:
                    
                    m = (l+h)//2
                    
                    if d[val][m]>=i:
                        if d[val][m]<mn1:mn1=d[val][m]
                        h = m-1
                    else:
                        l = m+1
                        
                if mn1!=100001:
                    
                    if mn1-i+1<mn:mn = mn1-i+1
            elif nums[i]%p==t%p:
                if 1<mn:mn = 1
            else:
                val = A[i]-nums[i]-(p-(t%p))
                if val in d:
                    l = 0
                    h = e[val] - 1
                    mn1 = 100001

                    while l<=h:

                        m = (l+h)//2

                        if d[val][m]>=i:
                            if d[val][m]<mn1:mn1=d[val][m]
                            h = m-1
                        else:
                            l = m+1

                    if mn1!=100001:

                        if mn1-i+1<mn:mn = mn1-i+1
        if mn==100001 or mn==lim:return -1
        return mn
        
        