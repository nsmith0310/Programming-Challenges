class Solution:
    def checkSubarraySum(self, nums: List[int], k: int) -> bool:
        lim = len(nums)
        if lim<2:return False
        
        if k==0:
            for i in range(0,lim-1):
                if nums[i]==0 and nums[i+1]==0:return True
            return False
        if k<0:k*=-1
            
            
        arr=[nums[0]%k]
        
        d = dict()
        d[nums[0]%k]=[0]
        
        for i in range(1,lim):
            arr.append((arr[i-1]%k+nums[i])%k)
            try:
                d[arr[-1]].append(i)
            except:
                d[arr[-1]]=[i]
                
        ###print(arr)
        t = 0
        for i in range(0,lim):
            ###print(K+arr[i]-A[i],-K+arr[i]-A[i],arr[i]-A[i])
            try:
                tmp = d[k+arr[i]-nums[i]%k]
                if tmp[-1]+1-i>=2:
                    print(tmp,i)
                    return True
                          
            except:
                pass
            try:
                tmp = d[-k+arr[i]-nums[i]%k]
                if tmp[-1]+1-i>=2:
                    print(tmp,i)
                    return True
            except:
                pass
            try:
                tmp = d[arr[i]-nums[i]%k]
                if tmp[-1]+1-i>=2:
                    print(tmp,i)
                    return True
            except:
                pass
            
        for i in range(0,lim-1):
                if nums[i]==0 and nums[i+1]==0:return True
        return False
        