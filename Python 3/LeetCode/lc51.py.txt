from copy import copy
class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        def check(pt,s):
           
            for x in s:
                if pt[1]==x[1]:return False
                val = (pt[0]-x[0])/(pt[1]-x[1])
                if val==1 or val==-1:
                    return False
            
            return True
        if n==1:
            return ["Q"]
        
        start=[]
        c = 0
        for i in range(1,n+1):
            tmp = set()
            tmp.add((1,i))
            start.append(tmp)
            
        i = 2    
        while i<=n:
           
            rec = []
        
            for x in start:
                for j in range(1,n+1):
                    
                    if check((i,j),x)==True:
                      
                        rec.append(x|{(i,j)})
            
            start = rec
            i+=1
        
        f = []
        for x in start:
            tmp = ["."*n for i in range(0,n)]
            
            for y in x:
                tmp[y[0]-1] = tmp[y[0]-1][:y[1]-1]+"Q"+tmp[y[0]-1][y[1]:]
            f.append(tmp)
        return f