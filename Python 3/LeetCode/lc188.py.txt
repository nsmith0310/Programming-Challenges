class Solution:
    def maxProfit(self, k: int, prices: List[int]) -> int:
        
        lim = len(prices)
        if lim==0 or k==0:
            return 0
        
        
        if k>lim:
            t = 0
            for i in range(1,len(prices)):
                if prices[i]>prices[i-1]:
                    t+=prices[i]-prices[i-1]
                
            return t
        
        states = [-99999999999]*2*k
        states[0]=-prices[0]
        mx = 0
        for i in range(1,lim):
            states[0]=max(states[0],-prices[i])
            p = 1
            for j in range(1,2*k):
                if p==1:
                    states[j]=max(states[j],states[j-1]+prices[i])
                    p = 0
                else:
                    states[j]=max(states[j],states[j-1]-prices[i])
                    p=1
            if states[-1]>mx:
                mx = states[-1]
        return mx