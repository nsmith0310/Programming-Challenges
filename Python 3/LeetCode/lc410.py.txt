from functools import lru_cache
class Solution:
    def splitArray(self, nums: List[int], m: int) -> int:
        
        tmp = []
        for i in range(0,len(nums)):
            if nums[i]!=0:
                tmp.append(nums[i])
        nums = tmp
        lim = len(nums)
        pref = [nums[0]]
       
        for i in range(1,lim):
            pref.append(pref[-1]+nums[i])
        
        val = pref[-1]
        
        
        
        mn = val
        @lru_cache(None)
        def r(i,M):
            if i==lim:return 0
            if M==m-1:
                return pref[-1]-pref[i]+nums[i]
                
            
            else:
                mn = val
                for j in range(i+1,lim+1):
                    
                    
                    
                    tmp = max(pref[j-1]-pref[i]+nums[i],r(j,M+1))
                    if tmp<mn:
                        mn = tmp
                    
                
                
                return mn
        
        
        return r(0,0)
                
            
        