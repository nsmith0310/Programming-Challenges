from functools import lru_cache
class Solution:
    def findNumberOfLIS(self, nums: List[int]) -> int:
        lim = len(nums)
        if lim==0:return 0
        l = [1]*lim
        l2 = [1]*lim
        for i in range(1,lim):
            for j in range(0,i):
                if nums[i]>nums[j]:
                    if l[i]<l[j]+1:
                        l[i]=l[j]+1
        
        k = max(l)
        
        @lru_cache(None)
        def r(i,c):
            if c==k:
                return 1
            else:
                t = 0
                for j in range(i-1,-1,-1):
                    if nums[j]<nums[i]:
                        t+=r(j,c+1)
                return t
        f = 0
        for i in range(0,lim):
            if l[i]==k:
                f+=r(i,1)
                
        return f
                    
        