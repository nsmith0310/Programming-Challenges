class Solution:
    
    def f(self,s):
        l = []
        
        for i in range(0,4):
            val = s[i]
            if val=='9':
                l.append(s[:i]+'0'+s[i+1:])
                l.append(s[:i]+'8'+s[i+1:])
            elif val=='0':
                l.append(s[:i]+'9'+s[i+1:])
                l.append(s[:i]+'1'+s[i+1:])
            else:
                l.append(s[:i]+str(int(s[i])+1)+s[i+1:])
                l.append(s[:i]+str(int(s[i])-1)+s[i+1:])
        
        return l
    def openLock(self, deadends: List[str], target: str) -> int:
        
        arr = [-1 for i in range(0,10000)]
        
        s = [-1 for i in range(0,10000)]
        for x in deadends:
            s[int(x)]=1
        mn = 10001
        start = [['0000',0]]
        
        while 1!=-1:
            tmp = []
            for x in start:
                if x[0]==target:
                    if x[1]<mn:mn = x[1]
                else:
                    if arr[int(x[0])]==-1 and s[int(x[0])]==-1:
                        arr[int(x[0])]=1
                        for y in self.f(x[0]):
                            if arr[int(y)]==-1 and s[int(y)]==-1:
                                tmp.append([y,x[1]+1])
            if tmp==[]:
                if mn==10001:
                    return -1
                return mn
            else:
                start = tmp
                        
        
        